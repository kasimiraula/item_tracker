{"version":3,"sources":["logo.svg","services/items.js","components/ItemListObject.js","components/ItemList.js","components/ItemForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseUrl","axios","get","newObject","post","id","put","ItemListObject","props","useState","minimize","setMinimize","hideDetails","display","total_usage","item","usage","length","map","amount","reduce","a","b","onClick","className","style","marginBottom","cursor","name","fontSize","marginTop","units","common_usage","key","increaseUsage","backgroundColor","color","textDecoration","borderRadius","padding","href","ItemList","orderedItems","items","sort","toUpperCase","console","log","handleIncrease","ItemForm","selectedUnits","setSelectedUnits","commonUsages","setCommonUsages","newCommonUsage","setNewCommonUsage","handleUnitChange","event","target","value","displayCommonUsages","mockButton","clearButton","onSubmit","e","preventDefault","newItem","handleAddItem","ex","error","alert","type","onChange","concat","u","App","setItems","visibilityFilter","setVisibilityFilter","useEffect","itemService","then","response","data","itemsToShow","filter","toLowerCase","indexOf","src","logo","alt","newUsage","find","changedItem","Date","toISOString","catch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.46ac102b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios'\nconst baseUrl = '/api/items'\n\nlet token = null\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = (newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token\n  }\n  return axios.post(baseUrl, newObject, config)\n  }*/\n\n  return axios.post(baseUrl, newObject)\n}\n\nconst updateUsage = async (id, newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token }\n\n    const response = await axios.post(`${baseUrl}/${id}/usage`, newObject, config)\n  }*/\n\n  const response = await axios.post(`${baseUrl}/${id}/usage`, newObject)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token }\n  }\n\n  */\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  return axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, updateUsage, setToken }\n","import React, {useState} from 'react'\n//import {likeBlog} from './../reducers/blogReducer'\n//import PropTypes from 'prop-types'\n\nconst ItemListObject = (props) => {\n\n  /*static propTypes = {\n    removeHandler: PropTypes.func.isRequired,\n    blog: PropTypes.object.isRequired\n  }*/\n\n  /*const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    marginBottom: 5\n  }*/\n  const [minimize, setMinimize] = useState(true)\n  const hideDetails = { display: minimize ? 'none' : '' }\n\n  const toggleDetailVisibility = () => {\n      setMinimize(!minimize)\n    }\n//        <p><a href={`/items/${props.item.name}`}>{props.item.name}</a></p>\n  const total_usage = props.item.usage.length === 0 ? 0 : props.item.usage.map(usage=>usage.amount).reduce((a,b)=>a+b)\n  const mockButton =  {backgroundColor: \"grey\", color:\"white\", textDecoration:\"none\",borderRadius: 5, fontSize:18, padding:5, cursor: \"pointer\"}\n\n\n  return (\n    <div onClick={toggleDetailVisibility}>\n      <div className='list-item-mini-info'>\n        <p style={{marginBottom:2, cursor: \"pointer\"}}>{props.item.name}</p>\n      </div>\n      <div className='list-item-detail-info' style={hideDetails}>\n        <p style={{fontSize:16, marginBottom:1,marginTop:1}}>used for {total_usage} {props.item.units}</p>\n        <p style={{fontSize:15, marginBottom:2}}>log new use</p>\n        {props.item.common_usage.map(usage=>\n        <button key={usage} className='usage-log-button' onClick={() => props.increaseUsage(props.item.id, usage)}>{usage} {props.item.units}</button>\n      )}\n      <p><a style={mockButton} href={`/items/${props.item.id}`}>Show more</a></p>\n      </div>\n    </div>\n\n  )\n\n\n}\n\n\n/*<div onClick={this.showDetails}>\n  <div className='mini-info'>\n    <a href={`/blogs/${this.props.blog.id}`}>{this.props.blog.title} by {this.props.blog.author}</a>\n    {this.state.minimize ? '' : this.details}\n  </div>\n  <div className='detail-info' style={hideDetails}>\n    {this.props.blog.url} <br/>\n    likes: {this.props.blog.likes} <br/>\n    added by {this.props.blog.user.name ? this.props.blog.user.name : `a user ${this.props.blog.user.username}`}<br/>\n    <button onClick={this.handleLike(this.props.blog)}>like</button>\n    &nbsp; &nbsp; {this.props.blog.user.username === this.props.loggedUser.username ?\n    <button onClick={this.props.removeHandler}>remove</button> :false}\n  </div>\n</div>*/\n//{this.state.isByLoggedUser ? <button onClick={this.state.removeHandler}>Delete</button> : ''}\n\n/*  showDetails = () => {\n    this.setState({minimize: !this.state.minimize})\n  }\n\n  handleLike = (blog) => (e) => {\n    this.props.likeBlog(blog)\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedUser: state.loggedUser,\n    blogs: state.blogs\n  }\n}\nexport default connect(\n  mapStateToProps,\n  {likeBlog}\n)(BlogListItem)*/\nexport default ItemListObject\n","import React, {useState} from 'react'\n//import {Table} from 'react-bootstrap'\n//import BlogListItem from './BlogListItem'\n//import {likeBlog, removeBlog} from './../reducers/blogReducer'\nimport ItemListObject from './ItemListObject';\n\nconst ItemList = (props) => {\n\n  const orderedItems = props.items.sort((a, b) => b.name.toUpperCase() - a.name.toUpperCase())\n  console.log(orderedItems)\n\n  return(\n    <div>\n      <h2>Items</h2>\n        {orderedItems.map(item =>\n          <ItemListObject key={item.id} item={item} increaseUsage={props.handleIncrease}/>\n          )}\n    </div>\n  )\n  }\n\n/*  handleLike = (blog) => async(e) => {\n    e.preventDefault()\n    this.props.likeBlog(blog)\n  }\n\n  handleRemove = (blog) => async(e) => {\n    e.preventDefault()\n    if (window.confirm(`Do you really want to remove ${blog.title} ?` )) {\n      this.props.removeBlog(blog)\n    }\n  }\n}\n\nconst orderItems = (items) => {\n  const orderedItems = items.sort((a,b) => b.name - a.name)\n  return orderedItems\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs : orderBlogs(state.blogs),\n    loggedUser : state.loggedUser\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {likeBlog, removeBlog}\n)(BlogList)\n*/\n\n\nexport default ItemList\n","import React, {useState} from 'react'\nimport '../index.css'\n\nconst ItemForm = (props) => {\n\n  const [newItem, setNewItem] = useState([])\n  const [selectedUnits, setSelectedUnits] = useState('')\n  const [commonUsages, setCommonUsages] = useState([])\n  const [newCommonUsage, setNewCommonUsage] = useState('')\n\n  const handleUnitChange = (event) => {\n    const units = event.target.value\n    setSelectedUnits(units)\n  }\n\n  const handleNewCommonUsageChange = (event) => {\n    const usage = event.target.value\n    setNewCommonUsage(usage)\n  }\n\n  const addCommonUsage = (event) => {\n    const usage = newCommonUsage\n\n    setCommonUsages(commonUsages.concat(usage))\n    setNewCommonUsage('')\n  }\n\n  const clearCommonUsages = () => {\n    setCommonUsages([])\n  }\n\n  const addNewItem = (e) => {\n      try{\n        e.preventDefault()\n        const newItem = {\n          name: e.target.name.value,\n          units: e.target.units.value,\n          usage: [],\n          common_usage: commonUsages\n        }\n\n        props.handleAddItem(newItem)\n\n        e.target.name.value = ''\n        e.target.units.value = ''\n        setNewCommonUsage('')\n        setCommonUsages([])\n\n        /*const notification= `a new blog ${newBlog.title} by ${newBlog.author} was added`\n        this.props.notify(notification, 'success', 5)\n        } catch (ex) {\n          const error = `couldn't add new blog due to an error: ${ex}`\n          this.props.notify(error, 'error', 5)\n        }*/\n      } catch (ex) {\n          const error = `couldn't add new blog due to an error: ${ex}`\n          alert(error)\n        }\n      }\n\n\n  const showDistance = { display: selectedUnits==='km' ? '' : 'none' }\n  const showTime = { display: selectedUnits==='h' ? '' : 'none' }\n  const displayCommonUsages = { display: commonUsages.length === 0 ? 'none' : '' }\n  const mockButton = {display: newCommonUsage === '' ? 'none' : '', backgroundColor: \"coral\"}\n  const clearButton = {display: commonUsages.length > 0 ? '' : 'none', backgroundColor: \"teal\"}\n\n  return(\n    <div>\n      <h2>Add new item</h2>\n      <form onSubmit={addNewItem}>\n        name: &emsp;\n        <input\n          type=\"text\"\n          name=\"name\"\n        />\n        <br/><br/>\n        What do you measure?\n        <br/>\n        <input onChange={handleUnitChange} type=\"radio\" id=\"km\" name=\"units\" value=\"km\"/>\n        distance &nbsp;\n        <input onChange={handleUnitChange} type=\"radio\" id=\"h\" name=\"units\" value=\"h\"/>\n        time\n        <br/><br/>\n        Add common usecases for the item\n        <br/>\n        <input onChange={handleNewCommonUsageChange} value={newCommonUsage} type=\"number\"/>\n        <p style={mockButton} onClick={addCommonUsage}>Add</p>\n\n        <p style={displayCommonUsages}>[{commonUsages.map(u=>\n          <a> {u}{selectedUnits} </a>\n        )}] &emsp; <a style={clearButton} onClick={clearCommonUsages}> clear </a> </p>\n        <br/><br/>\n        <button>Add a new item</button>\n        <br/><br/>\n        </form>\n      </div>\n  )\n}\n\n\n\nexport default ItemForm\n","import React, {useState, useEffect} from 'react';\n//import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\n\nimport logo from './logo.svg';\nimport './App.css';\nimport itemService from './services/items';\nimport ItemList from './components/ItemList';\nimport ItemForm from './components/ItemForm';\nimport FilterInput from './components/FilterInput';\n\nconst App = (props) => {\n\n  const [newItem, setNewItems] = useState([])\n  const [items, setItems] = useState([])\n  const [visibilityFilter, setVisibilityFilter] = useState('')\n\n  useEffect(() => {\n    const response = itemService.getAll().then(response=> {\n      setItems(response.data)\n    })\n  }, [])\n\n  const itemsToShow = items.filter(item => item.name.toLowerCase().indexOf(visibilityFilter.toLowerCase()) !== -1)\n  const handleFilterChange = (event) => {\n    setVisibilityFilter(event.target.value)\n  }\n\n  const handleUsageIncrease = (id, newUsage) => {\n    const item = items.find(item => item.id === id)\n    const changedItem = {...item, usage: item.usage.concat([{\"date\": new Date().toISOString(),\"amount\":newUsage}])}\n    itemService\n      .update(id, changedItem)\n      .then(response => {\n        setItems(items.map(item => item.id !== id ? item : response.data))\n      })\n      .catch(error=> {\n        alert(`could not add usage to ${newItem.name}. check logs for more info.`)\n        setItems(items.filter(item => item.id !== id))\n      })\n\n  }\n\n\n  const addItem = (newItem) => {\n    itemService\n      .create(newItem)\n      .then(response => {\n        setItems([...items, response.data])\n      })\n      .catch(error=> {\n        alert(\n          `could not add '${newItem.name}' to items`\n        )\n      })\n  }\n\n  //console.log(new Date().toISOString())\n\n  /*const addNote = (event) => {\n    event.preventDefault()\n    const itemObject = {\n      name: newItem.name,\n      unit: newItem.unit,\n      usage: newItem.usage\n    }\n  }*/\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <input onChange={handleFilterChange} value={visibilityFilter}/>\n        <ItemList items={itemsToShow} handleIncrease={handleUsageIncrease}/>\n        <ItemForm handleAddItem={addItem}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}