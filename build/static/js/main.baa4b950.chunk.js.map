{"version":3,"sources":["services/items.js","components/ItemListObject.js","components/ItemList.js","components/ItemForm.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","post","update","id","put","then","remove","config","headers","delete","updateUse","newUse","setToken","newToken","ItemListObject","props","useState","minimize","setMinimize","hideDetails","display","total_use","item","use","length","map","amount","reduce","b","previously_used","unformattedDate","dateAndTime","split","formatToDateAndTime","date","console","log","name","onClick","className","style","marginBottom","cursor","fontSize","marginTop","units","common_usecases","usecase","key","increaseUse","backgroundColor","color","textDecoration","borderRadius","padding","href","ItemList","orderedItems","items","sort","toUpperCase","handleIncrease","ItemForm","showForm","setShowForm","selectedUnits","setSelectedUnits","commonUsecases","setCommonUsecases","newCommonUsecase","setNewCommonUsecase","handleUnitChange","event","target","value","showMore","displayCommonUsecases","mockButton","clearButton","onSubmit","e","preventDefault","newItem","handleAddItem","ex","error","alert","type","onChange","validation","numericUsecase","parseInt","indexOf","validateUsecase","concat","u","App","setItems","visibilityFilter","setVisibilityFilter","useEffect","itemService","fetchData","undefined","src","logo","alt","itemsToShow","filter","toLowerCase","handleUseIncrease","Date","toISOString","Number","find","changedItem","window","confirm","addItem","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.baa4b950.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'https://manage-items.herokuapp.com/api/items'\nconst baseUrl = '/api/items'\n\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token\n  }\n  return axios.post(baseUrl, newObject, config)\n  }*/\n  const response = await axios.post(baseUrl, newObject)\n  return response\n}\n\nconst updateUse = async (id, newUse) => {\n  /*const config = {\n    headers: { 'Authorization': token }\n\n    const response = await axios.post(`${baseUrl}/${id}/usage`, newObject, config)\n  }*/\n  const response = await axios.post(`${baseUrl}/${id}/use`, newUse)\n\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token }\n  }\n\n  */\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  return axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, updateUse, setToken }\n","import React, {useState} from 'react'\n//import {likeBlog} from './../reducers/blogReducer'\n//import PropTypes from 'prop-types'\n\nconst ItemListObject = (props) => {\n\n  /*static propTypes = {\n    removeHandler: PropTypes.func.isRequired,\n    blog: PropTypes.object.isRequired\n  }*/\n\n  /*const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    marginBottom: 5\n  }*/\n  const [minimize, setMinimize] = useState(true)\n  const hideDetails = { display: minimize ? 'none' : '' }\n\n  const toggleDetailVisibility = () => {\n      setMinimize(!minimize)\n    }\n  function formatToDateAndTime(unformattedDate) {\n    let dateAndTime = unformattedDate.split('T')\n    dateAndTime[1] = dateAndTime[1].split('.')[0]\n    return dateAndTime\n  }\n//        <p><a href={`/items/${props.item.name}`}>{props.item.name}</a></p>\n  const total_use = props.item.use.length === 0 ? 0 : props.item.use.map(use=>use.amount).reduce((a,b)=>a+b)\n  const previously_used = props.item.use.length === 0 ? 'This item hasn\\'t been used' : `previously used ${formatToDateAndTime(props.item.use[props.item.use.length-1].date)[0]}`\n  console.log(props.item.name,previously_used)\n  const mockButton =  {backgroundColor: \"grey\", color:\"white\", textDecoration:\"none\",borderRadius: 5, fontSize:18, padding:5, cursor: \"pointer\"}\n\n\n\n  return (\n    <div onClick={toggleDetailVisibility}>\n      <div className='list-item-mini-info'>\n        <p style={{marginBottom:2, cursor: \"pointer\"}}>{props.item.name}</p>\n      </div>\n      <div className='list-item-detail-info' style={hideDetails}>\n        <p style={{fontSize:13, marginBottom:1,marginTop:1}}>{previously_used}</p>\n        <p style={{fontSize:13, marginBottom:1,marginTop:1}}>in total used for {total_use} {props.item.units}</p>\n        <p style={{fontSize:15, marginBottom:2}}>log new use</p>\n        {props.item.common_usecases.map(usecase=>\n        <button key={usecase} className='usecase-log-button' onClick={() => props.increaseUse(props.item.id, usecase)}>{usecase} {props.item.units}</button>\n      )}\n      <p><a style={mockButton} href={`/items/${props.item.id}`}>Show more</a></p>\n      </div>\n    </div>\n\n  )\n\n\n}\n\n\n/*<div onClick={this.showDetails}>\n  <div className='mini-info'>\n    <a href={`/blogs/${this.props.blog.id}`}>{this.props.blog.title} by {this.props.blog.author}</a>\n    {this.state.minimize ? '' : this.details}\n  </div>\n  <div className='detail-info' style={hideDetails}>\n    {this.props.blog.url} <br/>\n    likes: {this.props.blog.likes} <br/>\n    added by {this.props.blog.user.name ? this.props.blog.user.name : `a user ${this.props.blog.user.username}`}<br/>\n    <button onClick={this.handleLike(this.props.blog)}>like</button>\n    &nbsp; &nbsp; {this.props.blog.user.username === this.props.loggedUser.username ?\n    <button onClick={this.props.removeHandler}>remove</button> :false}\n  </div>\n</div>*/\n//{this.state.isByLoggedUser ? <button onClick={this.state.removeHandler}>Delete</button> : ''}\n\n/*  showDetails = () => {\n    this.setState({minimize: !this.state.minimize})\n  }\n\n  handleLike = (blog) => (e) => {\n    this.props.likeBlog(blog)\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedUser: state.loggedUser,\n    blogs: state.blogs\n  }\n}\nexport default connect(\n  mapStateToProps,\n  {likeBlog}\n)(BlogListItem)*/\nexport default ItemListObject\n","import React, {useState} from 'react'\n//import {Table} from 'react-bootstrap'\n//import BlogListItem from './BlogListItem'\n//import {likeBlog, removeBlog} from './../reducers/blogReducer'\nimport ItemListObject from './ItemListObject';\n\nconst ItemList = (props) => {\n\n  const orderedItems = props.items.sort((a, b) => b.name.toUpperCase() - a.name.toUpperCase())\n\n  return(\n    <div>\n      <h2>Items</h2>\n        {orderedItems.map(item =>\n          <ItemListObject key={item.id} item={item} increaseUse={props.handleIncrease}/>\n          )}\n    </div>\n  )\n  }\n\n/*  handleLike = (blog) => async(e) => {\n    e.preventDefault()\n    this.props.likeBlog(blog)\n  }\n\n  handleRemove = (blog) => async(e) => {\n    e.preventDefault()\n    if (window.confirm(`Do you really want to remove ${blog.title} ?` )) {\n      this.props.removeBlog(blog)\n    }\n  }\n}\n\nconst orderItems = (items) => {\n  const orderedItems = items.sort((a,b) => b.name - a.name)\n  return orderedItems\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs : orderBlogs(state.blogs),\n    loggedUser : state.loggedUser\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {likeBlog, removeBlog}\n)(BlogList)\n*/\n\n\nexport default ItemList\n","import React, {useState} from 'react'\nimport '../index.css'\n\nconst ItemForm = (props) => {\n\n  const [newItem, setNewItem] = useState([])\n  const [showForm, setShowForm] = useState(false)\n  const [selectedUnits, setSelectedUnits] = useState('')\n  const [commonUsecases, setCommonUsecases] = useState([])\n  const [newCommonUsecase, setNewCommonUsecase] = useState('')\n\n  const handleShowMore = () => {\n    setShowForm(!showForm)\n  }\n\n  function validateUsecase(usecase) {\n    let error=''\n    const numericUsecase = parseInt(usecase)\n\n    if (!parseInt(numericUsecase) & parseInt(numericUsecase)==!0) {\n      error = \"only numbers!\"\n    } else if (commonUsecases.indexOf(numericUsecase)>=0) {\n      error=\"You have already added this usecase!\"\n    } else if (numericUsecase <= 0) {\n      error = \"Only positive values to usecases\"\n    } else {\n      error='no errors'\n    }\n    return error\n  }\n\n  const handleUnitChange = (event) => {\n    const units = event.target.value\n    setSelectedUnits(units)\n  }\n\n  const handleNewCommonUsecaseChange = (event) => {\n    const usecase = event.target.value\n    setNewCommonUsecase(usecase)\n  }\n\n  const addCommonUsecase = (event) => {\n    const validation=validateUsecase(newCommonUsecase)\n    if (validation==='no errors') {\n        setCommonUsecases(commonUsecases.concat(parseInt(newCommonUsecase)))\n        setNewCommonUsecase('')\n      } else {\n\n      console.log(`${validation}`)\n    }\n  }\n\n  const clearCommonUsecases = () => {\n    setCommonUsecases([])\n  }\n\n  const addNewItem = (e) => {\n      try{\n        e.preventDefault()\n        const newItem = {\n          name: e.target.name.value,\n          units: e.target.units.value,\n          use: [],\n          common_usecases: commonUsecases\n        }\n\n        props.handleAddItem(newItem)\n\n        e.target.name.value = ''\n        e.target.units.value = ''\n        setNewCommonUsecase('')\n        setCommonUsecases([])\n\n        /*const notification= `a new blog ${newBlog.title} by ${newBlog.author} was added`\n        this.props.notify(notification, 'success', 5)\n        } catch (ex) {\n          const error = `couldn't add new blog due to an error: ${ex}`\n          this.props.notify(error, 'error', 5)\n        }*/\n      } catch (ex) {\n          const error = `couldn't add new item due to an error: ${ex}`\n          alert(error)\n        }\n      }\n\n  const showMore = { display: showForm ? '' : 'none' }\n  const showDistance = { display: selectedUnits==='km' ? '' : 'none' }\n  const showTime = { display: selectedUnits==='h' ? '' : 'none' }\n  const displayCommonUsecases = { display: commonUsecases.length === 0 ? 'none' : '' }\n  const mockButton = {display: newCommonUsecase === '' ? 'none' : '', backgroundColor: \"coral\"}\n  const clearButton = {display: commonUsecases.length > 0 ? '' : 'none', backgroundColor: \"teal\"}\n\n  return(\n    <div>\n    <div onClick={handleShowMore} style={{cursor: \"pointer\"}}>\n      <h3>Add new item</h3>\n    </div>\n    <div style={showMore}>\n      <form onSubmit={addNewItem}>\n        name: &emsp;\n        <input\n          type=\"text\"\n          name=\"name\"\n        />\n        <br/><br/>\n        What do you measure?\n        <br/>\n        <input onChange={handleUnitChange} type=\"radio\" id=\"km\" name=\"units\" value=\"km\"/>\n        distance &nbsp;\n        <input onChange={handleUnitChange} type=\"radio\" id=\"h\" name=\"units\" value=\"h\"/>\n        time\n        <br/><br/>\n        Add common usecases for the item\n        <br/>\n        <input onChange={handleNewCommonUsecaseChange} value={newCommonUsecase} type=\"number\"/>\n        <p style={mockButton} onClick={addCommonUsecase}>Add</p>\n\n        <p style={displayCommonUsecases}>[{commonUsecases.map(u=>\n          <a> {u}{selectedUnits} </a>\n        )}] &emsp; <a style={clearButton} onClick={clearCommonUsecases}> clear </a> </p>\n        <br/><br/>\n        <button>Add a new item</button>\n        <br/><br/>\n        </form>\n      </div>\n      </div>\n  )\n}\n\n\n\nexport default ItemForm\n","import React, {useState, useEffect} from 'react';\n//import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\n\nimport logo from './logo.svg';\nimport './App.css';\nimport itemService from './services/items';\nimport ItemList from './components/ItemList';\nimport ItemForm from './components/ItemForm';\nimport FilterInput from './components/FilterInput';\n\nconst App = (props) => {\n\n  const [newItem, setNewItems] = useState([])\n  const [items, setItems] = useState([])\n  const [visibilityFilter, setVisibilityFilter] = useState('')\n\n  useEffect(() => {\n    async function fetchData() {\n      const response =  await itemService.getAll()\n      setItems(response)\n    }\n    fetchData()\n  }, [])\n/*\n  useEffect(() => {\n    setItems(await itemService.getAll())\n  }, [])\n*/\n  if (items===undefined) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n    )\n  }\n  const itemsToShow = items.filter(item => item.name.toLowerCase().indexOf(visibilityFilter.toLowerCase()) !== -1)\n  const handleFilterChange = (event) => {\n    setVisibilityFilter(event.target.value)\n  }\n\n  const handleUseIncrease = async (id, amount) => {\n\n    const newUse = {\"date\": new Date().toISOString(),\"amount\":Number(amount)}\n    const item = items.find(item => item.id === id)\n    const changedItem = {...item, use: item.use.concat([newUse])}\n\n    if (window.confirm(`Add ${amount}${item.units} for ${item.name}?`)) {\n      await itemService.updateUse(id, newUse)\n\n      setItems(items.map(item => item.id !== id ? item : changedItem))\n    }\n\n\n  }\n\n\n  const addItem = async (newItem) => {\n    try {\n      const response = await itemService.create(newItem)\n      setItems([...items, response.data])\n    } catch (error) {\n      alert(`could not add '${newItem.name}' to items`)\n      }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <input onChange={handleFilterChange} value={visibilityFilter}/>\n        <ItemList items={itemsToShow} handleIncrease={handleUseIncrease}/>\n        <ItemForm handleAddItem={addItem}/>\n      </header>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}