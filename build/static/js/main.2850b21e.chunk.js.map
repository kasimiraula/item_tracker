{"version":3,"sources":["services/items.js","components/ItemListObject.js","components/ItemList.js","components/ItemForm.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["baseUrl","token","getAll","axios","get","create","newObject","a","post","response","update","id","put","then","data","remove","config","headers","delete","updateUse","newUse","setToken","newToken","ItemListObject","props","useState","minimize","setMinimize","hideDetails","display","total_use","item","use","length","map","amount","reduce","b","onClick","className","style","marginBottom","cursor","name","fontSize","marginTop","units","common_usecases","usecase","key","increaseUse","backgroundColor","color","textDecoration","borderRadius","padding","href","ItemList","orderedItems","items","sort","toUpperCase","handleIncrease","ItemForm","showForm","setShowForm","selectedUnits","setSelectedUnits","commonUsecases","setCommonUsecases","newCommonUsecase","setNewCommonUsecase","handleUnitChange","event","target","value","showMore","displayCommonUsecases","mockButton","clearButton","onSubmit","e","preventDefault","newItem","handleAddItem","ex","error","alert","type","onChange","concat","u","App","setItems","visibilityFilter","setVisibilityFilter","useEffect","itemService","console","log","undefined","src","logo","alt","itemsToShow","filter","toLowerCase","indexOf","handleUseIncrease","Date","toISOString","Number","find","changedItem","addItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.2850b21e.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'https://manage-items.herokuapp.com/api/items'\nconst baseUrl = '/api/items'\n\nlet token = null\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token\n  }\n  return axios.post(baseUrl, newObject, config)\n  }*/\n  const response = await axios.post(baseUrl, newObject)\n  return response\n}\n\nconst updateUse = (id, newUse) => {\n  /*const config = {\n    headers: { 'Authorization': token }\n\n    const response = await axios.post(`${baseUrl}/${id}/usage`, newObject, config)\n  }*/\n\n  return axios.post(`${baseUrl}/${id}/use`, newUse).then(response=>response.data)\n}\n\nconst update = (id, newObject) => {\n  /*const config = {\n    headers: { 'Authorization': token }\n  }\n\n  */\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  return axios.delete(`${baseUrl}/${id}`, config)\n}\n\nexport default { getAll, create, update, remove, updateUse, setToken }\n","import React, {useState} from 'react'\n//import {likeBlog} from './../reducers/blogReducer'\n//import PropTypes from 'prop-types'\n\nconst ItemListObject = (props) => {\n\n  /*static propTypes = {\n    removeHandler: PropTypes.func.isRequired,\n    blog: PropTypes.object.isRequired\n  }*/\n\n  /*const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    marginBottom: 5\n  }*/\n  const [minimize, setMinimize] = useState(true)\n  const hideDetails = { display: minimize ? 'none' : '' }\n\n  const toggleDetailVisibility = () => {\n      setMinimize(!minimize)\n    }\n//        <p><a href={`/items/${props.item.name}`}>{props.item.name}</a></p>\n  const total_use = props.item.use.length === 0 ? 0 : props.item.use.map(use=>use.amount).reduce((a,b)=>a+b)\n  const mockButton =  {backgroundColor: \"grey\", color:\"white\", textDecoration:\"none\",borderRadius: 5, fontSize:18, padding:5, cursor: \"pointer\"}\n\n\n  return (\n    <div onClick={toggleDetailVisibility}>\n      <div className='list-item-mini-info'>\n        <p style={{marginBottom:2, cursor: \"pointer\"}}>{props.item.name}</p>\n      </div>\n      <div className='list-item-detail-info' style={hideDetails}>\n        <p style={{fontSize:16, marginBottom:1,marginTop:1}}>used for {total_use} {props.item.units}</p>\n        <p style={{fontSize:15, marginBottom:2}}>log new use</p>\n        {props.item.common_usecases.map(usecase=>\n        <button key={usecase} className='usecase-log-button' onClick={() => props.increaseUse(props.item.id, usecase)}>{usecase} {props.item.units}</button>\n      )}\n      <p><a style={mockButton} href={`/items/${props.item.id}`}>Show more</a></p>\n      </div>\n    </div>\n\n  )\n\n\n}\n\n\n/*<div onClick={this.showDetails}>\n  <div className='mini-info'>\n    <a href={`/blogs/${this.props.blog.id}`}>{this.props.blog.title} by {this.props.blog.author}</a>\n    {this.state.minimize ? '' : this.details}\n  </div>\n  <div className='detail-info' style={hideDetails}>\n    {this.props.blog.url} <br/>\n    likes: {this.props.blog.likes} <br/>\n    added by {this.props.blog.user.name ? this.props.blog.user.name : `a user ${this.props.blog.user.username}`}<br/>\n    <button onClick={this.handleLike(this.props.blog)}>like</button>\n    &nbsp; &nbsp; {this.props.blog.user.username === this.props.loggedUser.username ?\n    <button onClick={this.props.removeHandler}>remove</button> :false}\n  </div>\n</div>*/\n//{this.state.isByLoggedUser ? <button onClick={this.state.removeHandler}>Delete</button> : ''}\n\n/*  showDetails = () => {\n    this.setState({minimize: !this.state.minimize})\n  }\n\n  handleLike = (blog) => (e) => {\n    this.props.likeBlog(blog)\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedUser: state.loggedUser,\n    blogs: state.blogs\n  }\n}\nexport default connect(\n  mapStateToProps,\n  {likeBlog}\n)(BlogListItem)*/\nexport default ItemListObject\n","import React, {useState} from 'react'\n//import {Table} from 'react-bootstrap'\n//import BlogListItem from './BlogListItem'\n//import {likeBlog, removeBlog} from './../reducers/blogReducer'\nimport ItemListObject from './ItemListObject';\n\nconst ItemList = (props) => {\n\n  const orderedItems = props.items.sort((a, b) => b.name.toUpperCase() - a.name.toUpperCase())\n\n  return(\n    <div>\n      <h2>Items</h2>\n        {orderedItems.map(item =>\n          <ItemListObject key={item.id} item={item} increaseUse={props.handleIncrease}/>\n          )}\n    </div>\n  )\n  }\n\n/*  handleLike = (blog) => async(e) => {\n    e.preventDefault()\n    this.props.likeBlog(blog)\n  }\n\n  handleRemove = (blog) => async(e) => {\n    e.preventDefault()\n    if (window.confirm(`Do you really want to remove ${blog.title} ?` )) {\n      this.props.removeBlog(blog)\n    }\n  }\n}\n\nconst orderItems = (items) => {\n  const orderedItems = items.sort((a,b) => b.name - a.name)\n  return orderedItems\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs : orderBlogs(state.blogs),\n    loggedUser : state.loggedUser\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {likeBlog, removeBlog}\n)(BlogList)\n*/\n\n\nexport default ItemList\n","import React, {useState} from 'react'\nimport '../index.css'\n\nconst ItemForm = (props) => {\n\n  const [newItem, setNewItem] = useState([])\n  const [showForm, setShowForm] = useState(false)\n  const [selectedUnits, setSelectedUnits] = useState('')\n  const [commonUsecases, setCommonUsecases] = useState([])\n  const [newCommonUsecase, setNewCommonUsecase] = useState('')\n\n  const handleShowMore = () => {\n    setShowForm(!showForm)\n  }\n\n  const handleUnitChange = (event) => {\n    const units = event.target.value\n    setSelectedUnits(units)\n  }\n\n  const handleNewCommonUsecaseChange = (event) => {\n    const usecase = event.target.value\n    setNewCommonUsecase(usecase)\n  }\n\n  const addCommonUsecase = (event) => {\n    const usecase = newCommonUsecase\n\n    setCommonUsecases(commonUsecases.concat(usecase))\n    setNewCommonUsecase('')\n  }\n\n  const clearCommonUsecases = () => {\n    setCommonUsecases([])\n  }\n\n  const addNewItem = (e) => {\n      try{\n        e.preventDefault()\n        const newItem = {\n          name: e.target.name.value,\n          units: e.target.units.value,\n          use: [],\n          common_usecases: commonUsecases\n        }\n\n        props.handleAddItem(newItem)\n\n        e.target.name.value = ''\n        e.target.units.value = ''\n        setNewCommonUsecase('')\n        setCommonUsecases([])\n\n        /*const notification= `a new blog ${newBlog.title} by ${newBlog.author} was added`\n        this.props.notify(notification, 'success', 5)\n        } catch (ex) {\n          const error = `couldn't add new blog due to an error: ${ex}`\n          this.props.notify(error, 'error', 5)\n        }*/\n      } catch (ex) {\n          const error = `couldn't add new item due to an error: ${ex}`\n          alert(error)\n        }\n      }\n\n  const showMore = { display: showForm ? '' : 'none' }\n  const showDistance = { display: selectedUnits==='km' ? '' : 'none' }\n  const showTime = { display: selectedUnits==='h' ? '' : 'none' }\n  const displayCommonUsecases = { display: commonUsecases.length === 0 ? 'none' : '' }\n  const mockButton = {display: newCommonUsecase === '' ? 'none' : '', backgroundColor: \"coral\"}\n  const clearButton = {display: commonUsecases.length > 0 ? '' : 'none', backgroundColor: \"teal\"}\n\n  return(\n    <div>\n    <div onClick={handleShowMore} style={{cursor: \"pointer\"}}>\n      <h3>Add new item</h3>\n    </div>\n    <div style={showMore}>\n      <form onSubmit={addNewItem}>\n        name: &emsp;\n        <input\n          type=\"text\"\n          name=\"name\"\n        />\n        <br/><br/>\n        What do you measure?\n        <br/>\n        <input onChange={handleUnitChange} type=\"radio\" id=\"km\" name=\"units\" value=\"km\"/>\n        distance &nbsp;\n        <input onChange={handleUnitChange} type=\"radio\" id=\"h\" name=\"units\" value=\"h\"/>\n        time\n        <br/><br/>\n        Add common usecases for the item\n        <br/>\n        <input onChange={handleNewCommonUsecaseChange} value={newCommonUsecase} type=\"number\"/>\n        <p style={mockButton} onClick={addCommonUsecase}>Add</p>\n\n        <p style={displayCommonUsecases}>[{commonUsecases.map(u=>\n          <a> {u}{selectedUnits} </a>\n        )}] &emsp; <a style={clearButton} onClick={clearCommonUsecases}> clear </a> </p>\n        <br/><br/>\n        <button>Add a new item</button>\n        <br/><br/>\n        </form>\n      </div>\n      </div>\n  )\n}\n\n\n\nexport default ItemForm\n","import React, {useState, useEffect} from 'react';\n//import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\n\nimport logo from './logo.svg';\nimport './App.css';\nimport itemService from './services/items';\nimport ItemList from './components/ItemList';\nimport ItemForm from './components/ItemForm';\nimport FilterInput from './components/FilterInput';\n\nconst App = (props) => {\n\n  const [newItem, setNewItems] = useState([])\n  const [items, setItems] = useState([])\n  const [visibilityFilter, setVisibilityFilter] = useState('')\n\n  useEffect(() => {\n    const response = itemService.getAll().then(response=> {\n      setItems(response.data)\n    })\n  }, [])\n\n  console.log(items)\n  if (items===undefined) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n    )\n  }\n  const itemsToShow = items.filter(item => item.name.toLowerCase().indexOf(visibilityFilter.toLowerCase()) !== -1)\n  const handleFilterChange = (event) => {\n    setVisibilityFilter(event.target.value)\n  }\n\n  const handleUseIncrease = async (id, amount) => {\n    const newUse = {\"date\": new Date().toISOString(),\"amount\":Number(amount)}\n    await itemService.updateUse(id, newUse)\n\n    const item = items.find(item => item.id === id)\n    const changedItem = {...item, use: item.use.concat([newUse])}\n\n    setItems(items.map(item => item.id !== id ? item : changedItem))\n  }\n\n\n  const addItem = async (newItem) => {\n    try {\n      const response = await itemService.create(newItem)\n      setItems([...items, response.data])\n    } catch (error) {\n      alert(`could not add '${newItem.name}' to items`)\n      }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <input onChange={handleFilterChange} value={visibilityFilter}/>\n        <ItemList items={itemsToShow} handleIncrease={handleUseIncrease}/>\n        <ItemForm handleAddItem={addItem}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}